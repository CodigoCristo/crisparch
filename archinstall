#!/bin/bash
#Creador Código Cristo
#https://www.patreon.com/codigocristo

#Sistema en español en liveCD

# El resultado de Curl aqui es: es-PE,qu,ay
# curl https://ipapi.co/languages  

# El resultado de Curl aqui es: es_PE.UTF8 UTF-8
# curl https://ipapi.co/languages | awk -F "," '{print $1}' | sed 's/-/_/g' | sed "s|$|.UTF8 UTF-8|"

# Lo cual vamos a guardar como variable para usarlo más adelante y en automatico
clear
idioma=$(curl https://ipapi.co/languages | awk -F "," '{print $1}' | sed 's/-/_/g' | sed "s|$|.UTF8|")
clear
echo ""
echo "Sistema en español"
echo ""
echo "$idioma UTF-8" > /etc/locale.gen
locale-gen
echo "LANG=$idioma" > /etc/locale.conf
exportlang=$(echo "LANG=$idioma")
export $exportlang
export LANG=$idioma
export $(cat /etc/locale.conf)
locale-gen
echo ""
clear



#Disco
discosdisponibles=$(echo "print devices" | parted | grep /dev/ | awk '{if (NR!=1) {print}}' | sed '/sr/d')
clear
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
echo ""
echo "Rutas de Disco disponible: "
echo ""
echo $discosdisponibles
echo ""
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _


# fdisk -l |  awk 'BEGIN{FS="bytes"","}{print $1} {print $2}' | grep ":" | sed '3d' | sed '4d' | sed '5d' | sed '3d'


# Ingresar Datos de usuario
echo ""
read -p "Introduce tu disco a instalar Arch: " disco
echo ""
read -p "Introduce Nombre usuario Nuevo: " user
echo ""
read -p "Introduce la clave de $user: " userpasswd
echo ""
read -p "Introduce la clave de Root/Administrador: " rootpasswd
echo ""

# Escritorios
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
echo ""
echo "Ingresa una opción marcando el numero correcto: (1 - 2 - 3 - 4)"
echo ""
echo "1. Terminal Virtual (TTY)"
echo "2. Xfce4"
echo "3. Kde Plasma"
echo "4. Gnome 40"
echo ""
read -p "Introduce la opción de Escritorio: " escritorio
echo ""

# Mostrar datos guardados
clear
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
echo ''
echo "Selección de Disco: $disco"
echo ''
echo "Tu usuario: $user"
echo ''
echo "Clave de usuario: $userpasswd"
echo ''
echo "Clave de Administrador: $rootpasswd"
echo ''

# Vemos que opción elige el usuario y realiza tal acción en este caso mostrar mensaje
case $escritorio in
  1)
    echo "Escritorio : Terminal Virtual (TTY)"
  ;;

  2)
    echo "Escritorio : Xfce4"
  ;;

  3)
    echo "Escritorio : Kde Plasma"
  ;;

  4)
    echo "Escritorio : Gnome 40"
  ;;
  *)
    echo "¡Incorrecto! por defecto se instalará Terminal Virtual (TTY)"
  ;;
esac
echo ""
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
echo ""
echo ""
echo "Para confirmar e instalar Arch Linux"
echo ""
echo "Presione ENTER o para salir presione CTRL + C"
read line



# DETECTA SI NUESTRO SISTEMA ES UEFI O BIOS LEGACY

uefi=$( ls /sys/firmware/efi/ | grep -ic efivars )

if [ $uefi == 1 ]
then
	clear
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
	echo ""
	echo "Tu Sistema es UEFI"
	echo ""
	date "+%F %H:%M"
	sleep 3
	#Fuente: https://wiki.archlinux.org/index.php/GPT_fdisk

	#Metodo con EFI - SWAP - ROOT - HOME
	#+100M 			tamaño particion boot
	#+${swapsize}G  tamaño particion swap
	#+50G			tamaño particion root
	#0				tamaño partición home
	#				Cambien valores si desean

	# Esta variable pone la misma cantidad de Gib que tenemos en ram fisica
	# free --giga | awk '/^Mem:/{print $2}'

	swapsize=$(free --giga | awk '/^Mem:/{print $2}')

	dd if=/dev/zero of="${disco}" bs=100M count=10 status=progress
	parted ${disco} mklabel gpt
	sgdisk ${disco} -n=1:0:+100M -t=1:ef00
	sgdisk ${disco} -n=2:0:+${swapsize}G -t=2:8200
	sgdisk ${disco} -n=3:0:+25G -t=3:8300
	sgdisk ${disco} -n=4:0:0
	fdisk -l ${disco} > /tmp/partition
	echo ""
	echo ""
	cat /tmp/partition
	sleep 3

	partition="$(cat /tmp/partition | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1}')"

	echo $partition | awk -F ' ' '{print $1}' >  boot-efi
	echo $partition | awk -F ' ' '{print $2}' >  swap-efi
	echo $partition | awk -F ' ' '{print $3}' >  root-efi
	echo $partition | awk -F ' ' '{print $4}' >  home-efi

	clear
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
	echo ""
	echo "Partición EFI es:" 
	cat boot-efi
	echo ""
	echo "Partición SWAP es:"
	cat swap-efi
	echo ""
	echo "Partición ROOT es:"
	cat root-efi
	echo ""
	echo "Partición HOME es:"
	cat home-efi
	sleep 4

	clear
	echo ""
	echo "Formateando Particiones"
	echo ""
	mkfs.ext4 $(cat root-efi) 
	mount $(cat root-efi) /mnt 

	mkdir -p /mnt/home
	mkfs.ext4 $(cat home-efi) 
	mount $(cat home-efi) /mnt/home

	mkdir -p /mnt/efi 
	mkfs.fat -F 32 $(cat boot-efi) 
	mount $(cat boot-efi) /mnt/efi 

	mkswap $(cat swap-efi) 
	swapon $(cat swap-efi)

	clear
	echo ""
	echo "Revise en punto de montaje en MOUNTPOINT"
	echo ""
	lsblk -l
	sleep 3
	clear

#---Metodo con EFI - SWAP - ROOT--------
#
#	swapsize=$(free --giga | awk '/^Mem:/{print $2}')
#	dd if=/dev/zero of="${disco}" bs=100M count=10 status=progress
#	parted ${disco} mklabel gpt
#	sgdisk ${disco} -n=1:0:+100M -t=1:ef00
#	sgdisk ${disco} -n=2:0:+${swapsize}G -t=2:8200
#	sgdisk ${disco} -n=3:0:0
#	fdisk -l ${disco} > /tmp/partition
#	echo ""
#	cat /tmp/partition
#	sleep 3
#
#	partition="$(cat /tmp/partition | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1}')"
#
#	echo $partition | awk -F ' ' '{print $1}' >  boot-efi
#	echo $partition | awk -F ' ' '{print $2}' >  swap-efi
#	echo $partition | awk -F ' ' '{print $3}' >  root-efi
#
#	clear
#	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
#	echo ""
#	echo "Partición EFI es:" 
#	cat boot-efi
#	echo ""
#	echo "Partición SWAP es:"
#	cat swap-efi
#	echo ""
#	echo "Partición ROOT es:"
#	cat root-efi
#	sleep 3
#
#	clear
#	echo ""
#	echo "Formateando Particiones"
#	echo ""
#	mkfs.ext4 $(cat root-efi) 
#	mount $(cat root-efi) /mnt 
#
#	mkdir -p /mnt/efi 
#	mkfs.fat -F 32 $(cat boot-efi) 
#	mount $(cat boot-efi) /mnt/efi 
#
#	mkswap $(cat swap-efi) 
#	swapon $(cat swap-efi)
#
#	clear
#	echo ""
#	echo "Revise en punto de montaje en MOUNTPOINT"
#	echo ""
#	lsblk -l
#	sleep 3


else
	clear
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
	echo ""
	echo "Tu Sistema es BIOS"
	echo ""
	date "+%F %H:%M"
	sleep 3
	#---Metodo con BIOS - SWAP - ROOT- HOME-------
	#+100M 			particion boot
	#+${swapsize}G	particion swap
	#+${swapsize}G	particion root
	#+20G			partición home
	#				Cambien valores si desean

	# Esta variable pone la misma cantidad de Gib que tenemos en ram fisica
	# free --giga | awk '/^Mem:/{print $2}'
	swapsize=$(free --giga | awk '/^Mem:/{print $2}')

	dd if=/dev/zero of="${disco}" bs=100M count=10 status=progress

	(echo o; echo n; echo p; echo 1; echo ""; echo +100M; echo n; echo p; echo 2; echo ""; echo +${swapsize}G; echo n; echo p; echo 3; echo ""; echo +20G; echo n; echo p; echo 4; echo ""; echo ""; echo t; echo 2; echo 82; echo a; echo 1; echo w; echo q) | fdisk ${disco}
	
	fdisk -l ${disco} > /tmp/partition 
	cat /tmp/partition
	sleep 3

	partition="$(cat /tmp/partition | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1}')"

	echo $partition | awk -F ' ' '{print $1}' >  boot-bios
	echo $partition | awk -F ' ' '{print $2}' >  swap-bios
	echo $partition | awk -F ' ' '{print $3}' >  root-bios
	echo $partition | awk -F ' ' '{print $4}' >  home-bios

	clear
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
	echo ""
	echo "Partición BOOT es:" 
	cat boot-bios
	echo ""
	echo "Partición SWAP es:"
	cat swap-bios
	echo ""
	echo "Partición HOME es:"
	cat home-bios
	echo ""
	echo "Partición ROOT es:"
	cat root-bios
	sleep 3

	clear
	echo ""
	echo "Formateando Particiones"
	echo ""
	mkfs.ext4 $(cat root-bios) 
	mount $(cat root-bios) /mnt 

	mkdir -p /mnt/boot
	mkfs.ext4 $(cat boot-bios) 
	mount $(cat boot-bios) /mnt/boot

	mkdir -p /mnt/home
	mkfs.ext4 $(cat home-bios) 
	mount $(cat home-bios) /mnt/home

	mkswap $(cat swap-bios) 
	swapon $(cat swap-bios)

	clear
	echo ""
	echo "Revise en punto de montaje en MOUNTPOINT"
	echo ""
	lsblk -l
	sleep 4
	clear


#---Metodo con BIOS - SWAP - ROOT-------
#
#	swapsize=$(free --giga | awk '/^Mem:/{print $2}')
#	dd if=/dev/zero of="${disco}" bs=100M count=10 status=progress
#	(echo o; echo n; echo p; echo 1; echo ""; echo +100M; echo n; echo p; echo 2; echo ""; echo +${swapsize}G; echo n; echo p; echo 3; echo ""; echo ""; echo t; echo 2; echo 82; echo a; echo 1; echo w; echo q) | fdisk ${disco}
#	fdisk -l ${disco} > /tmp/partition 
#	cat /tmp/partition
#	sleep 3
#
#	partition="$(cat /tmp/partition | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1}')"
#
#	echo $partition | awk -F ' ' '{print $1}' >  boot-bios
#	echo $partition | awk -F ' ' '{print $2}' >  swap-bios
#	echo $partition | awk -F ' ' '{print $3}' >  root-bios
#
#	clear
#	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
#	echo ""
#	echo "Partición BOOT es:" 
#	cat boot-bios
#	echo ""
#	echo "Partición SWAP es:"
#	cat swap-bios
#	echo ""
#	echo "Partición ROOT es:"
#	cat root-bios
#	sleep 3
#
#	clear
#	echo ""
#	echo "Formateando Particiones"
#	echo ""
#	mkfs.ext4 $(cat root-bios) 
#	mount $(cat root-bios) /mnt 
#
#	mkdir -p /mnt/boot
#	mkfs.ext4 $(cat boot-bios) 
#	mount $(cat boot-bios) /mnt/boot
#
#	mkswap $(cat swap-bios) 
#	swapon $(cat swap-bios)
#
#	clear
#	echo ""
#	echo "Revise en punto de montaje en MOUNTPOINT"
#	echo ""
#	lsblk -l
#	sleep 4
#	clear
	
fi
